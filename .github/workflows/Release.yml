name: Release
run-name: ${{ github.actor }} start release. ðŸš€

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  Merge-Master-Branch-In-Develop-Branch:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.WEPLATE_RELEASE_PAT_TOKEN }}

      - name: Set Git User
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Merge main into develop
        run: |
          git fetch origin develop
          git checkout develop
          git merge origin/main --no-ff --allow-unrelated-histories -m "Auto-merge main into develop by ${{ github.actor }} [skip ci]"
          git push origin develop

      - name: Checkout main
        run: |
          git checkout main

      - name: Get latest tag
        id: get_tag
        run: |
          tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v1.0.0")
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Bump minor version
        id: bump_version
        run: |
          version="${{ steps.get_tag.outputs.tag }}"
          version="${version#v}"
          IFS='.' read -r major minor patch <<< "$version"
          new_tag="v$major.$((minor + 1)).$patch"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Push new tag
        run: |
          git tag ${{ steps.bump_version.outputs.new_tag }}
          git push origin ${{ steps.bump_version.outputs.new_tag }}
